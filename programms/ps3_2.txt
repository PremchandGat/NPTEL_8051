ORG 0H
LJMP MAIN
ORG 100H
MAIN:
CALL TAKE_INP
CALL QUANT_ENC
CALL LED_DISP
HERE: SJMP HERE
ORG 130H
// *****************


DELAY:
// ADD YOUR CODE HERE


TAKE_INP:
	mov r1, #60H;
	mov r5, #4
	mov 70H, #16;
	TakeIn:
		mov p1, 70H
		acall delay_10sec
		mov p1, #0ffh
		acall delay_250msec;
		mov r3, p1
		mov p1, 70H
		acall delay_10sec
		mov p1, #0ffh
		acall delay_250msec;
		mov r4, p1
		clr A
		mov A, r3
		swap A
		add A, r4
		mov @r1, A
		INC r1
		mov A, 70H
		square: 
			mov A, 70H
			INC A
			mov B, #2
			MUL AB
			mov 70H, A
			djnz r5, TakeIn


// ADD YOUR CODE HERE
QUANT_ENC:
	mov r3 , #4
	mov r1, #60H
Quant:	
	mov A, @r1
	cjne A , #0, check1
		mov @r1, #5
	check1:
		mov r2, #1
		jnc next1;
			mov r2, #0
		next1:
			cjne r2, #1, nnext1
			mov @r1, #5;
			nnext1:	
				cjne A, #10, check2
				mov @r1, #15
	check2:
		mov r2, #1
		jnc next2;
			mov r2, #0
		next2:
			cjne r2, #1, nnext2
			mov @r1, #15;
			nnext2:	
				cjne A, #20, check3
				mov @r1, #25

	check3:
		mov r2, #1
		jnc next3;
			mov r2, #0
		next3:
			cjne r2, #1, nnext3
			mov @r1, #25;
			nnext3:	
				cjne A, #30, check5
				mov @r1, #25
		
	check5:
		mov r2, #1
		jnc next5;
			mov r2, #0
		next5:
			cjne r2, #1, nnext5
			mov @r1, #35;
			nnext5:	
			INC r1
			djnz r3 , Quant


// ADD YOUR CODE HERE

LED_DISP:
	mov r1, #60H
	mov r3, #4
	Display:
		mov A , @r1
		mov r2, A
		INC r1
		cjne r2, #5, en1;
			mov p1, #16;
			//acall delay_10sec
		en1:
			cjne r2, #15, en2;
			mov p1, #32;
			//acall delay_10sec
		en2:
			cjne r2, #25, en3;
			mov p1, #64;
			//acall delay_10sec
			djnz r3, Display
		en3:
			mov p1, #128;
			//acall delay_10sec
			djnz r3, Display


delay_10sec:
	mov r7, #5
	h5: acall delay_1sec
		djnz r7, h5
		ret

delay_1sec:
	mov r6, #4
	h4: acall delay_250msec
		djnz r6, h4
		ret

delay_250msec:
	push 004
	mov r0, #250
	h3: acall delay_1ms
		djnz r0, h3
		pop 00h
		ret

delay_1ms:
	push 00h
	mov r0, #4
h2: acall delay_250us
	djnz r0, h2
	pop 00h
	ret
	
delay_250us:
	push 00h
	mov r0, #244
	h1: djnz r0, h1
	pop 00h
	ret



RET
END